---
title: Почему написали Айтиль
date: 2016-10-27 20:46 MSK
tags: Айтиль, основы, ITIL
---
###Айтиль написали как будто без повода
Компьютеры и компьютерщики жили без Айтиля 44 года: ENIAC работал уже в 1945, а первый том первой версии Айтиля вышел только в 1989 году. Писать этот том начали в 1986, значит, идея написания появилась ещё раньше. Что случилось с компьютерами в середине 80-х такого, что в ответ на это пришлось написать Айтиль? 

Не случилось ничего. Самое близкое к 1986 году заметное событие в компьютерной индустрии — уход Стива Джобса из «Эпл» в 1985 году. Перед этим он выпустил «Макинтош» в 1984. Перед этим IBM выпустила PC в 1981. Да, персональные компьютеры изменили мир, но ни одно из этих событий не могло быть причиной написания Айтиля. Во-первых, в Айтиле не написано об особой роли персональных компьютеров. Наоборот, в версии от 2000 года авторы всё ещё пишут про мейнфреймы, как про ядро инфраструктуры. Во-вторых, известно, что на создание Айтиля сильно повлияла созданная в IBM «Архитектура управления информационными системами» (ISMA), первый том которой вышел в 1980 году. Работа над ISMA началась в 1972. Но и в начале 70-х с компьютерами ничего выдающегося не произошло. Как будто Айтиль написали от нечего делать. А ведь так не бывает! Что-то должно было послужить причиной.

###Раньше почти все сотрудники ИТ были программистами 
В 1995 году мы с одногруппниками обсуждали, кто такой хороший программист. В деталях разошлись, но суть все понимали одинаково: хороший программист это тот, кто пишет хорошие программы. Это логически следовало из того, кто такой программист вообще — это тот, кто пишет программы.

Через год я уже работал программистом, переписывал на ФоксПро заводскую систему расчёта потребности в материалах и запчастях. Мой друг этажом ниже писал на Паскале систему учёта готовой продукции. Рядом с ним программировали систему расчёта зарплаты. Почти все сотрудники отдела АСУ были программистами, то есть писали программы. 

Из определения, что программист — это тот, кто пишет программы, следует, что когда программы написана, его работа закончена. На заводе было не так: после написания программы её нужно было установить, обучить пользователей, решать их проблемы. У заводского программиста неожиданно оказалось множество непрограммистских обязанностей.

В 2015 году я искал и расспрашивал людей постарше о том, как работали отделы АСУ в прошлом. Свидетелей 60-х и 70-х не нашёл, а в 80-х было то же самое: несмотря на попытки министерств распространять готовые программы по подведомственным предприятиям, несмотря на попытки предприятий распространить свое ПО на другие предприятия, на заводах и в конторах программисты старались не использовать чужие программы, но писать свои. А написав, сопровождали и поддерживали их.

За границей дела обстояли точно так же: например, Ф. Брукс в «Мифическом человеко-месяце» говорит об ИТ-подразделении только как о команде программистов, а идею покупать готовое ПО, а не разрабатывать собственное, называет революционной. Книга вышла в конце 60-х.

Помню, в конце 90-х молодые сотрудники ИТ-отделов потешались над бухгалтерами за то, что те называли их программистами. А ведь с точки зрения бухгалтера ничего не изменилось: много лет к бухгалтеру приходил сотрудник ИТ-отдела, чтобы «помочь с программой». И всегда раньше этот сотрудник был программистом, по должности и по выполняемой работе. А когда в конце 90-х сотрудник ИТ-отдела точно так же пришёл к бухгалтеру, чтобы «помочь с программой», с чего бухгалтер должен был захотеть называть его не программистом, а как-то иначе?

###В 2000-х в ИТ-подразделениях программистов не стало 
Бухгалтер не знал, что революционная идея конца 60-х покупать готовое ПО, а не писать собственное, к концу 90-х полностью реализовалась. Типовая инфраструктура небольшой компании выглядела так: на рабочих местах ОС и офисный пакет от «Микрософта», плюс бухгалтерская программа от российского производителя. На серверах ещё держался «Новелл», но «Микрософт» его уверенно вытеснял. Компании покрупнее могли похвастаться более престижными марками серверов, а бухгалтерская программа у них была немецкая, но собственных программ ни большие, ни маленькие компании не писали.
 
Программисты оказались не нужны, и за несколько лет ИТ-подразделениям пришлось превратиться из команд разработчиков в команды эксплуатации и поддержки. Молодые айтишники 2000-х правильно не понимали, за что их называют программистами, потому что в отделах, где они работали, программистов больше не было. 

###Айтиль — для ИТ, которое не пишет программы
Вот откуда слово «сервис» в ИТСМ (ИТ-сервис-менеджмент) — ИТ-подразделения прекратили писать программы и стали предоставлять услуги.   

Вот что имеют в виду, когда говорят о «революции в ИТ, ответом на которую стал Айтиль и ИТСМ» — массовую замену программистов на администраторов и операторов поддержки.

Вот почему написали Айтиль — ни методы управления проектами, ни методы разработки ПО не годились в качестве инструкций «как жить» ИТ-подразделениям, основной продукцией которых вместо программ стали услуги. 
